
{
  "compilerOptions": {
    "noEmit": true, // Don't emit; allow Babel to transform files.
    "experimentalDecorators": true,
    "baseUrl": "src", // Allow us to import relative to this folder
    "target": "esnext", // Specify what our Target language will be for TS Compiler
    "module": "esnext", // Specify module code: variout options like 'none', commonjs', 'es2015', or 'ESNext' etc <-- Here we compile to ES2015 and babel takes over
    //"allowJs": true, // Allows for the JS files to be compiled
    "jsx": "preserve", // We could define react here, but we tell TS to not transform it as we got babel to do the work
    "strict": true, // Stricter type checking
    "allowSyntheticDefaultImports": true, // Allows you to use ES2015 style imports, even though the code we import doesnt have a ES2015 default export
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "strictNullChecks": true,
    "lib": [
      "es5",
      "es6",
      "dom",
      "es2015.core",
      "es2015.collection",
      "es2015.generator",
      "es2015.iterable",
      "es2015.promise",
      "es2015.proxy",
      "es2015.reflect",
      "es2015.symbol",
      "es2015.symbol.wellknown",
      "esnext.asynciterable"
    ]
  }
}